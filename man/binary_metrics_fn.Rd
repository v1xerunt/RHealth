% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Metrics_binary.R
\name{binary_metrics_fn}
\alias{binary_metrics_fn}
\title{Binary Classification Metrics (Python‐style API)}
\usage{
binary_metrics_fn(y_true, y_prob, metrics = NULL, threshold = 0.5)
}
\arguments{
\item{y_true}{Numeric vector of ground‑truth labels (0 / 1).}

\item{y_prob}{Numeric vector of predicted probabilities for the positive
class.}

\item{metrics}{Character vector listing which metrics to compute.  Default
is \code{c("pr_auc","roc_auc","f1")}.}

\item{threshold}{Numeric decision threshold used to convert probabilities to
hard labels (\code{y_pred}).  Default \code{0.5}.}
}
\value{
Named numeric vector with one element per requested metric.
}
\description{
A configurable evaluator for \strong{binary classification} tasks.  The function
reproduces the behaviour of Python’s \code{binary_metrics_fn}, covering classical
discrimination metrics (ROC‑AUC, F1, accuracy, …​) as well as calibration
metrics (ECE / adaptive ECE).

Supported \code{metrics} names:
\itemize{
\item \strong{"pr_auc"}  – Precision‑Recall area under the curve
\item \strong{"roc_auc"} – Receiver‑Operating‑Characteristic area under the curve
\item \strong{"accuracy"}, \strong{"balanced_accuracy"}, \strong{"f1"}, \strong{"precision"}, \strong{"recall"}
\item \strong{"cohen_kappa"} – Cohen’s κ
\item \strong{"jaccard"}    – Jaccard index (intersection‑over‑union)
\item \strong{"ECE"}        – Expected Calibration Error (equal‑width bins)
\item \strong{"ECE_adapt"}  – Adaptive ECE (equal‑size bins)
}
}
\examples{
set.seed(42)
y_true <- rbinom(100, 1, 0.4)
y_prob <- runif(100)
binary_metrics_fn(y_true, y_prob, metrics = c("accuracy", "ECE"))

}
