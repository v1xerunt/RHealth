% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Task_BaseTask.R
\name{BaseTask}
\alias{BaseTask}
\title{BaseTask (Abstract Base Class)}
\description{
An abstract base class for all task classes. It defines the task name, input/output schema, a pre-filtering hook, and the main processing interface.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{task_name}}{Name of the task}

\item{\code{input_schema}}{Named list specifying the expected input structure (field name -> type)}

\item{\code{output_schema}}{Named list specifying the expected output structure (field name -> type)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BaseTask-new}{\code{BaseTask$new()}}
\item \href{#method-BaseTask-pre_filter}{\code{BaseTask$pre_filter()}}
\item \href{#method-BaseTask-call}{\code{BaseTask$call()}}
\item \href{#method-BaseTask-clone}{\code{BaseTask$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseTask-new"></a>}}
\if{latex}{\out{\hypertarget{method-BaseTask-new}{}}}
\subsection{Method \code{new()}}{
Initialize the task instance. Can be overridden in subclasses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseTask$new(task_name = NULL, input_schema = NULL, output_schema = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task_name}}{A string specifying the name of the task.}

\item{\code{input_schema}}{A named list describing the input data schema (optional).}

\item{\code{output_schema}}{A named list describing the output data schema (optional).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseTask-pre_filter"></a>}}
\if{latex}{\out{\hypertarget{method-BaseTask-pre_filter}{}}}
\subsection{Method \code{pre_filter()}}{
Pre-filter hook to modify or filter the input data before main processing.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseTask$pre_filter(df)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{A data frame or lazy data object (e.g., from dplyr or data.table).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A filtered or modified version of the input data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseTask-call"></a>}}
\if{latex}{\out{\hypertarget{method-BaseTask-call}{}}}
\subsection{Method \code{call()}}{
Main processing function. Must be overridden in subclasses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseTask$call(patient)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{patient}}{A list or structured object representing a single patient or record.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of named lists (equivalent to Python List\link{Dict}) representing the task result.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseTask-clone"></a>}}
\if{latex}{\out{\hypertarget{method-BaseTask-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseTask$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
