% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Dataset_BaseDataset.R
\name{BaseDataset}
\alias{BaseDataset}
\title{BaseDataset — R6 infrastructure for clinical event datasets}
\description{
BaseDataset — R6 infrastructure for clinical event datasets

BaseDataset — R6 infrastructure for clinical event datasets
}
\details{
The \strong{BaseDataset} class mirrors rhealth's \code{BaseDataset}, providing a
fully‑featured, YAML driven loader that converts multi‑table electronic
health records into a single \emph{event} table.  It supports:
\itemize{
\item URL or local‐file ingestion (with automatic \code{.csv} / \code{.csv.gz}
fallback).
\item Per‑table joins as declared in the config.
\item Flexible timestamp parsing (single or multi‑column).
\item A \code{dev} mode that caps the number of patients for rapid
prototyping.
\item Multi‑threaded sample generation with progress bars.
}

Down‑stream, it cooperates with \code{BaseTask} (task definition),
\code{Patient} (per‑subject wrapper), and \code{SampleDataset} (collection of
input/output pairs).
}
\section{Dependencies}{

Polars is used via the \code{polars} R package.  Parallelism and progress
reporting require \code{future}, \code{future.apply}, and \code{progressr}.
}

\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{root}}{Root directory (or URL prefix) for data files.}

\item{\code{tables}}{Character vector of table names to ingest.}

\item{\code{dataset_name}}{Human‑readable dataset label.}

\item{\code{config}}{Parsed YAML configuration list.}

\item{\code{dev}}{Logical flag — when TRUE limits to 1 000 patients.}

\item{\code{global_event_df}}{A polars LazyFrame with all events combined.}

\item{\code{.collected_global_event_df}}{Polars dataframe storing all global events.}

\item{\code{.unique_patient_ids}}{Character vector of unique patient IDs.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BaseDataset-new}{\code{BaseDataset$new()}}
\item \href{#method-BaseDataset-collected_global_event_df}{\code{BaseDataset$collected_global_event_df()}}
\item \href{#method-BaseDataset-load_table}{\code{BaseDataset$load_table()}}
\item \href{#method-BaseDataset-load_data}{\code{BaseDataset$load_data()}}
\item \href{#method-BaseDataset-unique_patient_ids}{\code{BaseDataset$unique_patient_ids()}}
\item \href{#method-BaseDataset-get_patient}{\code{BaseDataset$get_patient()}}
\item \href{#method-BaseDataset-iter_patients}{\code{BaseDataset$iter_patients()}}
\item \href{#method-BaseDataset-stats}{\code{BaseDataset$stats()}}
\item \href{#method-BaseDataset-default_task}{\code{BaseDataset$default_task()}}
\item \href{#method-BaseDataset-set_task}{\code{BaseDataset$set_task()}}
\item \href{#method-BaseDataset-clone}{\code{BaseDataset$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseDataset-new"></a>}}
\if{latex}{\out{\hypertarget{method-BaseDataset-new}{}}}
\subsection{Method \code{new()}}{
Instantiate a \code{BaseDataset}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseDataset$new(
  root,
  tables,
  dataset_name = NULL,
  config_path = NULL,
  dev = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{root}}{Character.  Root directory / URL prefix where CSV files live.}

\item{\code{tables}}{Character vector of table keys defined in the config.}

\item{\code{dataset_name}}{Optional custom name; defaults to the R6 class name.}

\item{\code{config_path}}{Path to YAML or  schema describing each table.}

\item{\code{dev}}{Logical.  If TRUE, limits to 1000 patients for speed.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseDataset-collected_global_event_df"></a>}}
\if{latex}{\out{\hypertarget{method-BaseDataset-collected_global_event_df}{}}}
\subsection{Method \code{collected_global_event_df()}}{
Materialise (collect) the lazy event dataframe.  In dev‑mode only the
first 1 000 patients are kept.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseDataset$collected_global_event_df()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A polars DataFrame containing all selected events.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseDataset-load_table"></a>}}
\if{latex}{\out{\hypertarget{method-BaseDataset-load_table}{}}}
\subsection{Method \code{load_table()}}{
Load one table, apply joins, lowercase columns, and standardise to the
event schema.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseDataset$load_table(table_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{table_name}}{Character key present in \code{config$tables}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A polars LazyFrame in event format.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseDataset-load_data"></a>}}
\if{latex}{\out{\hypertarget{method-BaseDataset-load_data}{}}}
\subsection{Method \code{load_data()}}{
Load every configured table, returning a single \emph{lazy} frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseDataset$load_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A polars LazyFrame.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseDataset-unique_patient_ids"></a>}}
\if{latex}{\out{\hypertarget{method-BaseDataset-unique_patient_ids}{}}}
\subsection{Method \code{unique_patient_ids()}}{
Retrieve (and cache) the vector of unique patient IDs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseDataset$unique_patient_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character vector of patient IDs.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseDataset-get_patient"></a>}}
\if{latex}{\out{\hypertarget{method-BaseDataset-get_patient}{}}}
\subsection{Method \code{get_patient()}}{
Construct a \code{Patient} object for one subject.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseDataset$get_patient(patient_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{patient_id}}{Character identifier.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{Patient} R6 instance.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseDataset-iter_patients"></a>}}
\if{latex}{\out{\hypertarget{method-BaseDataset-iter_patients}{}}}
\subsection{Method \code{iter_patients()}}{
Iterate over all patients (optionally a filtered dataframe).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseDataset$iter_patients(df = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{Optional polars DataFrame (already collected).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of \code{Patient} objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseDataset-stats"></a>}}
\if{latex}{\out{\hypertarget{method-BaseDataset-stats}{}}}
\subsection{Method \code{stats()}}{
Print dataset‑level statistics.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseDataset$stats()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible NULL (called for side‑effects).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseDataset-default_task"></a>}}
\if{latex}{\out{\hypertarget{method-BaseDataset-default_task}{}}}
\subsection{Method \code{default_task()}}{
Default task placeholder (override in subclass).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseDataset$default_task()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseDataset-set_task"></a>}}
\if{latex}{\out{\hypertarget{method-BaseDataset-set_task}{}}}
\subsection{Method \code{set_task()}}{
Apply a \code{BaseTask} to build a \code{SampleDataset}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseDataset$set_task(task = NULL, num_workers = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{A \code{BaseTask} instance; if NULL, \code{default_task()} is
used.}

\item{\code{num_workers}}{Integer ≥1.  Number of parallel workers.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A populated \code{SampleDataset}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseDataset-clone"></a>}}
\if{latex}{\out{\hypertarget{method-BaseDataset-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseDataset$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
